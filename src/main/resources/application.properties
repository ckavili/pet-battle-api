# configure the MongoDB client for a single node cluster on localhost
%prod.quarkus.mongodb.connection-string = mongodb://${DATABASE_USER}:${DATABASE_PASSWORD}@${DATABASE_SERVICE_HOST}:${DATABASE_SERVICE_PORT}/${DATABASE_NAME}
%dev.quarkus.mongodb.connection-string = mongodb://localhost:27017
# mandatory if you don't specify the name of the database using @MongoEntity
quarkus.mongodb.database = cats
quarkus.http.cors=true
quarkus.swagger-ui.always-include=true
#quarkus.mongodb.health.enabled=false

# http2 support over ssl port
quarkus.ssl.native=true
quarkus.http.http2=true
quarkus.http.port=8080
quarkus.http.ssl-port=8443
quarkus.http.ssl.certificate.key-store-file=keystore.jks

# gzip support
quarkus.resteasy.gzip.enabled=true
quarkus.resteasy.gzip.max-input=20M

quarkus.native.additional-build-args=-H:ResourceConfigurationFiles=resources-config.json

# openshift/kubernetes build and deployment configuration using dekorate
#quarkus.kubernetes.deployment-target=openshift
#quarkus.kubernetes.part-of=cats
#quarkus.kubernetes.name=cats
#quarkus.kubernetes.labels.app=cats
#quarkus.kubernetes.version=latest
#quarkus.kubernetes.image-pull-policy=Always
#quarkus.kubernetes.replicas=1
#quarkus.kubernetes.readiness-probe.initial-delay=0s
#quarkus.kubernetes.readiness-probe.period=10s
# image name
#quarkus.container-image.group=cats
#quarkus.container-image.name=cats
#quarkus.container-image.tag=latest
#quarkus.s2i.base-jvm-image=quay.io/quarkus/ubi-quarkus-native-s2i:20.0.0

# logging configuration
quarkus.log.console.enable=true
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
quarkus.log.console.level=INFO
quarkus.log.console.color=true
quarkus.log.category."io.quarkus".level=DEBUG

# rest client nsfw
%prod.app.petbattle.rest.client.NSFWTransactionService/mp-rest/url=http://${NSFW_API_SERVICE_HOST}:5000
%dev.app.petbattle.rest.client.NSFWTransactionService/mp-rest/url=http://localhost:5000 
app.petbattle.rest.client.NSFWTransactionService/mp-rest/scope=javax.inject.Singleton

